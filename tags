!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
AC_KSEQ_H	kseq.h	31;"	d
BAD_ALIGN	frag_check.h	94;"	d
BNTSEQ_H	bntseq.h	2;"	d
BUILD_REF_H	build_ref.h	2;"	d
CBACK	lsat_aln.h	52;"	d
CC	Makefile	/^CC=			gcc$/;"	m
CDEL	lsat_aln.h	38;"	d
CDIFF	lsat_aln.h	51;"	d
CEQUAL	lsat_aln.h	49;"	d
CFLAGS	Makefile	/^CFLAGS=		-g -Wall -O0$/;"	m
CHARD_CLIP	lsat_aln.h	45;"	d
CHR_DIF	lsat_aln.h	16;"	d
CIGAR_GEN	lsat_aln.h	55;"	d
CIGAR_SHIFT	lsat_aln.h	54;"	d
CIGAR_STR	lsat_aln.h	29;"	d
CINS	lsat_aln.h	36;"	d
CMATCH	lsat_aln.h	34;"	d
COVERED	frag_check.h	99;"	d
CPAD	lsat_aln.h	47;"	d
CREF_SKIP	lsat_aln.h	40;"	d
CSOFT_CLIP	lsat_aln.h	43;"	d
DELETION	lsat_aln.h	15;"	d
E	ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
EDIT_THS	lsat_aln.h	11;"	d
FRAG_H	frag_check.h	2;"	d
GOOD_ALIGN	frag_check.h	93;"	d
H0	ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
H1	ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
Hmax	ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
INSERT	lsat_aln.h	14;"	d
KSEQ_INIT	kseq.h	217;"	d
KSEQ_INIT	lsat_aln.c	/^KSEQ_INIT(gzFile, gzread)$/;"	f
KSTREAM_INIT	kseq.h	139;"	d
KSTRING_T	kseq.h	81;"	d
KSW_XBYTE	ksw.h	6;"	d
KSW_XSTART	ksw.h	9;"	d
KSW_XSTOP	ksw.h	7;"	d
KSW_XSUBO	ksw.h	8;"	d
KS_SEP_MAX	kseq.h	39;"	d
KS_SEP_SPACE	kseq.h	37;"	d
KS_SEP_TAB	kseq.h	38;"	d
LEFT	frag_check.h	97;"	d
LIB	Makefile	/^LIB=		-lm -lz$/;"	m
LIKELY	ksw.c	32;"	d	file:
LIKELY	ksw.c	35;"	d	file:
LIKELY	ssw.c	47;"	d	file:
LIKELY	ssw.c	50;"	d	file:
LSAT_ALN_H	lsat_aln.h	2;"	d
MATCH	lsat_aln.h	13;"	d
MAXOFTWO	frag_check.h	88;"	d
MAX_E	frag_check.h	102;"	d
MAX_FRAG	frag_check.h	90;"	d
MAX_LINE_LEN	frag_check.h	91;"	d
MAX_MIS	extend_ssw.c	18;"	d	file:
MINOFTWO	frag_check.h	89;"	d
MINUS_INF	ksw.c	443;"	d	file:
OBJS	Makefile	/^OBJS=		main.o build_ref.o	bntseq.o lsat_aln.o frag_check.o extend_ssw.o ssw.o ksw.o$/;"	m
PER_ALN_N	lsat_aln.h	9;"	d
PER_LEN	frag_check.c	20;"	d	file:
PRICE_DIF_CHR	lsat_aln.h	20;"	d
PRICE_LONG_DEL	lsat_aln.h	21;"	d
PRICE_SKIP	lsat_aln.h	22;"	d
PROG	Makefile	/^PROG=		lsat$/;"	m
READ_INIT_MAX	lsat_aln.h	5;"	d
REVERSE	lsat_aln.h	17;"	d
RIGHT	frag_check.h	96;"	d
SEED_INIT_MAX	lsat_aln.h	6;"	d
SEED_LEN	lsat_aln.h	8;"	d
SOAP2_DP_DIR	lsat_aln.h	26;"	d
SSW_H	ssw.h	12;"	d
THRSHOLD	lsat_aln.h	18;"	d
UNCOVERED	frag_check.h	100;"	d
UNLIKELY	ksw.c	33;"	d	file:
UNLIKELY	ksw.c	36;"	d	file:
UNLIKELY	ssw.c	48;"	d	file:
UNLIKELY	ssw.c	51;"	d	file:
__AC_KSW_H	ksw.h	2;"	d
__KSEQ_BASIC	kseq.h	145;"	d
__KSEQ_READ	kseq.h	170;"	d
__KSEQ_TYPE	kseq.h	210;"	d
__KS_BASIC	kseq.h	51;"	d
__KS_GETC	kseq.h	67;"	d
__KS_GETUNTIL	kseq.h	92;"	d
__KS_TYPE	kseq.h	41;"	d
__kstring_t	kseq.h	/^typedef struct __kstring_t {$/;"	s
__max_16	ksw.c	113;"	d	file:
__max_8	ksw.c	230;"	d	file:
__rpac	bntseq.c	320;"	d	file:
_kswq_t	ksw.c	/^struct _kswq_t {$/;"	s	file:
_profile	ssw.c	/^struct _profile{$/;"	s	file:
adjest	lsat_aln.h	24;"	d
align_destroy	ssw.c	/^void align_destroy (s_align* a) {$/;"	f
alignment_end	ssw.c	/^} alignment_end;$/;"	t	typeref:struct:__anon12	file:
aln_free_msg	lsat_aln.c	/^void aln_free_msg(aln_msg *a_msg, int seed_max)	\/\/a_msg大小为read_max个$/;"	f
aln_init_msg	lsat_aln.c	/^aln_msg *aln_init_msg(int seed_max)$/;"	f
aln_msg	lsat_aln.h	/^} aln_msg;$/;"	t	typeref:struct:__anon10
aln_t	lsat_aln.h	/^} aln_t;$/;"	t	typeref:struct:__anon9
amb	bntseq.h	/^	char amb;$/;"	m	struct:__anon2
ambs	bntseq.h	/^	bntamb1_t *ambs; \/\/ n_holes elements$/;"	m	struct:__anon3
ambs_offset	bntseq.h	/^	int32_t ambs_offset;$/;"	m	struct:__anon1
anno	bntseq.h	/^	char *name, *anno;$/;"	m	struct:__anon1
anns	bntseq.h	/^	bntann1_t *anns; \/\/ n_seqs elements$/;"	m	struct:__anon3
at	lsat_aln.h	/^	aln_t *at;	$/;"	m	struct:__anon10
b_f	frag_check.h	/^	int b_f;$/;"	m	struct:__anon4
backtrack	lsat_aln.c	/^int backtrack(aln_msg* a_msg, path_msg **path, int n_seed, int **price, int seed_len, frag_msg *f_msg)  \/\/from end to start, find every fragment's postion$/;"	f
banded_sw	ssw.c	/^cigar* banded_sw (const int8_t* ref,$/;"	f
bias	ssw.c	/^	uint8_t bias;$/;"	m	struct:_profile	file:
bmax	lsat_aln.h	/^	int bmax;		\/\/max band-width, NOT for this seed-aln, for this in-del case.$/;"	m	struct:__anon9
bns_destroy	bntseq.c	/^void bns_destroy(bntseq_t *bns)$/;"	f
bns_dump	bntseq.c	/^void bns_dump(const bntseq_t *bns, const char *prefix)$/;"	f
bns_fa2bnt	bntseq.c	/^void bns_fa2bnt(gzFile fp_fa, const char *prefix)$/;"	f
bns_restore	bntseq.c	/^bntseq_t *bns_restore(const char *prefix)$/;"	f
bns_restore_core	bntseq.c	/^bntseq_t *bns_restore_core(const char *ann_filename, const char* amb_filename, const char* pac_filename)$/;"	f
bntamb1_t	bntseq.h	/^} bntamb1_t;$/;"	t	typeref:struct:__anon2
bntann1_t	bntseq.h	/^} bntann1_t;$/;"	t	typeref:struct:__anon1
bntseq_t	bntseq.h	/^} bntseq_t;$/;"	t	typeref:struct:__anon3
chr	frag_check.h	/^	int chr;$/;"	m	struct:__anon4
chr	lsat_aln.h	/^	int32_t chr;$/;"	m	struct:__anon9
cigar	frag_check.h	/^	uint32_t *cigar;		\/\/frag's cigar$/;"	m	struct:__anon4
cigar	lsat_aln.h	/^	uint32_t *cigar;$/;"	m	struct:__anon9
cigar	ssw.c	/^} cigar;$/;"	t	typeref:struct:__anon13	file:
cigar	ssw.h	/^	uint32_t* cigar;	$/;"	m	struct:__anon14
cigarLen	ssw.h	/^	int32_t cigarLen;	$/;"	m	struct:__anon14
cigar_len	frag_check.h	/^	int cigar_len;			\/\/frag's cigar length$/;"	m	struct:__anon4
cigar_len	lsat_aln.h	/^	int cigar_len;  \/\/default: 7 for 3-ed$/;"	m	struct:__anon9
cigar_max	frag_check.h	/^	int cigar_max;			\/\/size of cigar[]$/;"	m	struct:__anon4
cigar_read_end	frag_check.h	/^	int cigar_read_end;$/;"	m	struct:__anon4
cigar_read_start	frag_check.h	/^	int cigar_read_start;	\/\/frag's cigar start of read, 1-based$/;"	m	struct:__anon4
cigar_ref_end	frag_check.h	/^	int cigar_ref_end;		$/;"	m	struct:__anon4
cigar_ref_start	frag_check.h	/^	int cigar_ref_start;	\/\/frag's cigar start of ref, 1-based	XXX int64_t?$/;"	m	struct:__anon4
cmax	lsat_aln.h	/^	int cmax;$/;"	m	struct:__anon9
e	ksw.c	/^	int32_t h, e;$/;"	m	struct:__anon6	file:
edit_dis	frag_check.h	/^	int edit_dis;			\/\/frag's edit-dis$/;"	m	struct:__anon4
edit_dis	lsat_aln.h	/^	int8_t edit_dis;$/;"	m	struct:__anon9
eh_t	ksw.c	/^} eh_t;$/;"	t	typeref:struct:__anon6	file:
ex_read_begin	frag_check.h	/^	int ex_read_begin;	\/\/1-based$/;"	m	struct:__anon4
ex_read_end	frag_check.h	/^	int ex_read_end;$/;"	m	struct:__anon4
ex_ref_begin	frag_check.h	/^	int ex_ref_begin;	\/\/1-based$/;"	m	struct:__anon4
ex_ref_end	frag_check.h	/^	int ex_ref_end;$/;"	m	struct:__anon4
extend_ssw	extend_ssw.c	/^int extend_ssw(int8_t *ref_num, int8_t *read_num, int ref_len, int read_len, int* ref_l_os, int* read_l_os, int* ref_r_os, int* read_r_os)$/;"	f
fa2pac	bntseq.c	/^int fa2pac(int argc, char *argv[])$/;"	f
fa_msg	frag_check.h	/^	frag_aln_msg *fa_msg;$/;"	m	struct:__anon5
flag	frag_check.h	/^	int flag;$/;"	m	struct:__anon4
flag	lsat_aln.h	/^    int flag;   \/\/MATCH INSERT DELETION$/;"	m	struct:__anon11
fp_pac	bntseq.h	/^	FILE *fp_pac;$/;"	m	struct:__anon3
frag_aln_msg	frag_check.h	/^} frag_aln_msg;$/;"	t	typeref:struct:__anon4
frag_check	frag_check.c	/^int frag_check(bntseq_t *bns, int8_t *pac, char *read_prefix, char *read_seq, frag_msg *f_msg, aln_msg *a_msg, int seed_len)$/;"	f
frag_cluster	lsat_aln.c	/^int frag_cluster(char *ref_prefix, char *read_prefix, char *seed_result, seed_msg *s_msg, int seed_len, bntseq_t *bns, int8_t *pac)$/;"	f
frag_covered	frag_check.c	/^int frag_covered(frag_msg *f_msg, int f_i, int b_f)$/;"	f
frag_extend	frag_check.c	/^int frag_extend(frag_msg *f_msg, aln_msg *a_msg, int f_i, bntseq_t *bns, int8_t *pac, char *read_seq, int8_t *seq1, int8_t *seq2, int seed_len)$/;"	f
frag_free_msg	frag_check.c	/^void frag_free_msg(frag_msg *f_msg)$/;"	f
frag_init_msg	frag_check.c	/^frag_msg* frag_init_msg(int frag_max)$/;"	f
frag_max	frag_check.h	/^	int frag_max;	\/\/macro	XXX$/;"	m	struct:__anon5
frag_msg	frag_check.h	/^} frag_msg;$/;"	t	typeref:struct:__anon5
frag_num	frag_check.h	/^	int frag_num;$/;"	m	struct:__anon5
frag_refresh	frag_check.c	/^int frag_refresh(frag_msg* f_msg, int f_i, int ref_offset, int read_offset, int FLAG)$/;"	f
frag_set_msg	frag_check.c	/^int frag_set_msg(aln_msg *a_msg, int seed_i, int aln_i, int FLAG, frag_msg *f_msg, int frag_i, int seed_len)\/\/FLAG 0:start \/ 1:end \/ 2:seed$/;"	f
from	lsat_aln.h	/^    int from;$/;"	m	struct:__anon11
g_defr	ksw.c	/^const kswr_t g_defr = { 0, -1, -1, -1, -1, -1, -1 };$/;"	v
get_min_dis	lsat_aln.c	/^int get_min_dis(aln_msg *a_msg, int i, int j, int k, int* flag, int pre_pre, int seed_len)    \/\/(i,j)对应节点，来自i-1的第k个aln$/;"	f
getintv1	frag_check.c	/^int getintv1(int8_t *seq1, bntseq_t *bns, int8_t *pac, aln_msg *a_msg, int seed1_i, int seed1_aln_i, int seed2_i, int seed2_aln_i, int seed_len)$/;"	f
getintv2	frag_check.c	/^int getintv2(int8_t *seq2, char *read_seq, aln_msg *a_msg, int seed1_i, int seed1_aln_i, int seed2_i, int seed2_aln_i, int *band_width, int seed_len)$/;"	f
gi	bntseq.h	/^	uint32_t gi;$/;"	m	struct:__anon1
h	ksw.c	/^	int32_t h, e;$/;"	m	struct:__anon6	file:
init_destroy	ssw.c	/^void init_destroy (s_profile* p) {$/;"	f
kroundup32	kseq.h	89;"	d
kroundup32	ssw.c	65;"	d	file:
ks_eof	kseq.h	48;"	d
ks_rewind	kseq.h	49;"	d
kstring_t	kseq.h	/^} kstring_t;$/;"	t	typeref:struct:__kstring_t
ksw_align	ksw.c	/^kswr_t ksw_align(int qlen, uint8_t *query, int tlen, uint8_t *target, int m, const int8_t *mat, int gapo, int gape, int xtra, kswq_t **qry)$/;"	f
ksw_extend	ksw.c	/^int ksw_extend(int qlen, const uint8_t *query, int tlen, const uint8_t *target, int m, const int8_t *mat, int gapo, int gape, int w, int h0, int *_qle, int *_tle)$/;"	f
ksw_global	ksw.c	/^int ksw_global(int qlen, const uint8_t *query, int tlen, const uint8_t *target, int m, const int8_t *mat, int gapo, int gape, int w, int *n_cigar_, uint32_t **cigar_)$/;"	f
ksw_i16	ksw.c	/^kswr_t ksw_i16(kswq_t *q, int tlen, const uint8_t *target, int _gapo, int _gape, int xtra) \/\/ the first gap costs -(_o+_e)$/;"	f
ksw_qinit	ksw.c	/^kswq_t *ksw_qinit(int size, int qlen, const uint8_t *query, int m, const int8_t *mat)$/;"	f
ksw_u8	ksw.c	/^kswr_t ksw_u8(kswq_t *q, int tlen, const uint8_t *target, int _gapo, int _gape, int xtra) \/\/ the first gap costs -(_o+_e)$/;"	f
kswq_t	ksw.h	/^typedef struct _kswq_t kswq_t;$/;"	t	typeref:struct:_kswq_t
kswr_t	ksw.h	/^} kswr_t;$/;"	t	typeref:struct:__anon7
l	kseq.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
l_pac	bntseq.h	/^	int64_t l_pac;$/;"	m	struct:__anon3
last_len	frag_check.h	/^	int last_len;$/;"	m	struct:__anon5
len	bntseq.h	/^	int32_t len;$/;"	m	struct:__anon1
len	bntseq.h	/^	int32_t len;$/;"	m	struct:__anon2
len_dif	frag_check.h	/^	int len_dif;			\/\/length difference between ref and read$/;"	m	struct:__anon4
len_dif	lsat_aln.h	/^	int len_dif;	\/\/length difference between ref and read$/;"	m	struct:__anon9
length	ssw.c	/^	int32_t length;$/;"	m	struct:__anon13	file:
lsat_aln	lsat_aln.c	/^int lsat_aln(int argc, char *argv[])$/;"	f
lsat_aln_core	lsat_aln.c	/^int lsat_aln_core(const char *ref_prefix, const char *read_prefix, int no_soap2_dp, char *seed_result, char *opt_m, int opt_l)$/;"	f
lsat_index	build_ref.c	/^int lsat_index(int argc, char *argv[])$/;"	f
lsat_soap2_dp	lsat_aln.c	/^int lsat_soap2_dp(const char *ref_prefix, const char *read_prefix, char *opt_m)$/;"	f
m	kseq.h	/^	size_t l, m;$/;"	m	struct:__kstring_t
main	ksw.c	/^int main(int argc, char *argv[])$/;"	f
main	main.c	/^int main(int argc, char *argv[])$/;"	f
mat	ssw.c	/^	const int8_t* mat;$/;"	m	struct:_profile	file:
max	ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
max16	ssw.c	137;"	d	file:
max8	ssw.c	381;"	d	file:
mdiff	ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
merge_cigar	frag_check.c	/^void merge_cigar(frag_msg *f_msg, int f_i, uint32_t *cigar, int cigar_len, int reflen, int readlen, bntseq_t *bns, int8_t *pac, char *read_seq)$/;"	f
n	ssw.c	/^	int32_t n;$/;"	m	struct:_profile	file:
n_aln	lsat_aln.h	/^	int8_t n_aln;$/;"	m	struct:__anon10
n_ambs	bntseq.h	/^	int32_t n_ambs;$/;"	m	struct:__anon1
n_char	bntseq.c	/^char n_char[6] = {'A', 'C', 'G', 'T', 'N' };$/;"	v
n_holes	bntseq.h	/^	int32_t n_holes;$/;"	m	struct:__anon3
n_read	lsat_aln.h	/^    int n_read;		\/\/获取的read总数目			$/;"	m	struct:__anon8
n_recover	bntseq.c	/^int32_t n_recover(const bntseq_t *bns, const int32_t seq_n, const int64_t pac_coor, const int64_t len, int8_t *seq, const int srand)$/;"	f
n_seed	lsat_aln.h	/^    int *n_seed;	\/\/存放每条read的seed数目	$/;"	m	struct:__anon8
n_seqs	bntseq.h	/^	int32_t n_seqs;$/;"	m	struct:__anon3
name	bntseq.h	/^	char *name, *anno;$/;"	m	struct:__anon1
nsrand	lsat_aln.h	/^	int8_t nsrand;$/;"	m	struct:__anon9
offset	bntseq.h	/^	int64_t offset;$/;"	m	struct:__anon1
offset	bntseq.h	/^	int64_t offset;$/;"	m	struct:__anon2
offset	lsat_aln.h	/^	int32_t offset;	\/\/1-base	XXX:64_t?$/;"	m	struct:__anon9
pac2fa_core	bntseq.c	/^int pac2fa_core(const bntseq_t *bns, const int8_t *pac, const int32_t seq_n, const int64_t start\/*0-base*\/, int32_t *len, const int srand, int *FLAG, int8_t *seq)$/;"	f
path_dp	lsat_aln.c	/^int path_dp(aln_msg *a_msg, int n_seed, path_msg **path, int **price, int seed_len)$/;"	f
path_msg	lsat_aln.h	/^} path_msg;$/;"	t	typeref:struct:__anon11
per_n	frag_check.h	/^	int per_n;$/;"	m	struct:__anon4
per_seed_max	frag_check.h	/^	int per_seed_max;$/;"	m	struct:__anon5
pre_pre	lsat_aln.h	/^	int pre_pre;	\/\/skip one node$/;"	m	struct:__anon11
printcigar	frag_check.c	/^void printcigar(uint32_t *cigar, int cigar_len)$/;"	f
profile_byte	ssw.c	/^	__m128i* profile_byte;	\/\/ 0: none$/;"	m	struct:_profile	file:
profile_word	ssw.c	/^	__m128i* profile_word;	\/\/ 0: none$/;"	m	struct:_profile	file:
push_cigar	frag_check.c	/^void push_cigar(uint32_t **fcigar, int *fcigar_len, int *fcmax, uint32_t *cigar, int cigar_len)$/;"	f
push_cigar	ksw.c	/^static inline uint32_t *push_cigar(int *n_cigar, int *m_cigar, uint32_t *cigar, int op, int len)$/;"	f	file:
qP_byte	ssw.c	/^__m128i* qP_byte (const int8_t* read_num,$/;"	f
qP_word	ssw.c	/^__m128i* qP_word (const int8_t* read_num,$/;"	f
qb	ksw.h	/^	int tb, qb; \/\/ target start and query start$/;"	m	struct:__anon7
qe	ksw.h	/^	int te, qe; \/\/ target end and query end$/;"	m	struct:__anon7
qlen	ksw.c	/^	int qlen, slen;$/;"	m	struct:_kswq_t	file:
qp	ksw.c	/^	__m128i *qp, *H0, *H1, *E, *Hmax;$/;"	m	struct:_kswq_t	file:
read	ssw.c	/^	const int8_t* read;$/;"	m	struct:_profile	file:
read	ssw.c	/^	int32_t read;    \/\/alignment ending position on read, 0-based $/;"	m	struct:__anon12	file:
readLen	ssw.c	/^	int32_t readLen;$/;"	m	struct:_profile	file:
read_begin	frag_check.h	/^	int read_begin;	\/\/1-based$/;"	m	struct:__anon4
read_begin1	ssw.h	/^	int32_t	read_begin1;	$/;"	m	struct:__anon14
read_end	frag_check.h	/^	int read_end;$/;"	m	struct:__anon4
read_end1	ssw.h	/^	int32_t read_end1;	$/;"	m	struct:__anon14
read_id	lsat_aln.h	/^	int32_t read_id;$/;"	m	struct:__anon10
ref	ssw.c	/^	int32_t ref;	 \/\/0-based position $/;"	m	struct:__anon12	file:
ref_begin	frag_check.h	/^	int ref_begin;	\/\/1-based$/;"	m	struct:__anon4
ref_begin1	ssw.h	/^	int32_t ref_begin1;	$/;"	m	struct:__anon14
ref_end	frag_check.h	/^	int ref_end;$/;"	m	struct:__anon4
ref_end1	ssw.h	/^	int32_t ref_end1;	$/;"	m	struct:__anon14
ref_end2	ssw.h	/^	int32_t ref_end2;$/;"	m	struct:__anon14
relat_path	lsat_aln.c	/^void relat_path(const char *ref_path, const char *soap_dir, char *relat_ref_path)	$/;"	f
result_check	extend_ssw.c	/^int result_check(s_align* result, int ref_len, int read_len, int* ref_l_os, int* read_l_os, int* ref_r_os, int* read_r_os)$/;"	f
revseq	ksw.c	/^static void revseq(int l, uint8_t *s)$/;"	f	file:
s	kseq.h	/^	char *s;$/;"	m	struct:__kstring_t
s_align	ssw.h	/^} s_align;$/;"	t	typeref:struct:__anon14
s_profile	ssw.h	/^typedef struct _profile s_profile;$/;"	t	typeref:struct:_profile
score	ksw.h	/^	int score; \/\/ best score$/;"	m	struct:__anon7
score	ssw.c	/^	uint16_t score;$/;"	m	struct:__anon12	file:
score1	ssw.h	/^	uint16_t score1;	$/;"	m	struct:__anon14
score2	ksw.h	/^	int score2, te2; \/\/ second best score and ending position on the target$/;"	m	struct:__anon7
score2	ssw.h	/^	uint16_t score2;	$/;"	m	struct:__anon14
seed_aln_i	frag_check.h	/^	int *seed_aln_i;$/;"	m	struct:__anon4
seed_free_msg	lsat_aln.c	/^void seed_free_msg(seed_msg *msg)$/;"	f
seed_i	frag_check.h	/^	int *seed_i;$/;"	m	struct:__anon4
seed_init_msg	lsat_aln.c	/^seed_msg *seed_init_msg(void)$/;"	f
seed_max	lsat_aln.h	/^    int seed_max;   \/\/contig中分割成短read的数目最大值	$/;"	m	struct:__anon8
seed_msg	lsat_aln.h	/^} seed_msg;$/;"	t	typeref:struct:__anon8
seed_num	frag_check.h	/^	int seed_num;	\/\/seed number of per frag$/;"	m	struct:__anon4
seed_num	frag_check.h	/^	int seed_num;	\/\/whole number$/;"	m	struct:__anon5
seq	ssw.c	/^	uint32_t* seq;$/;"	m	struct:__anon13	file:
seq_reverse	ssw.c	/^int8_t* seq_reverse(const int8_t* seq, int32_t end)	\/* end is 0-based alignment ending position *\/	$/;"	f
setAmsg	lsat_aln.c	/^void setAmsg(aln_msg *a_msg, int32_t read_x, int aln_y, int read_id, int chr, int offset, int srand, int edit_dis, char *cigar)$/;"	f
setCigar	lsat_aln.c	/^void setCigar(aln_msg *a_msg, int seed_i, int aln_i, char *s_cigar)$/;"	f
set_d	ssw.c	58;"	d	file:
set_u	ssw.c	55;"	d	file:
shift	ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
size	ksw.c	/^	uint8_t shift, mdiff, max, size;$/;"	m	struct:_kswq_t	file:
slen	ksw.c	/^	int qlen, slen;$/;"	m	struct:_kswq_t	file:
soap_bulid	build_ref.c	/^int soap_bulid(char *prefix, char *path)$/;"	f
split_mapping	frag_check.c	/^void split_mapping(frag_msg *f_msg, aln_msg *a_msg, int f1_i, int f2_i, int seed_len)$/;"	f
split_seed	lsat_aln.c	/^int split_seed(const char *prefix, seed_msg *s_msg, int seed_len)$/;"	f
srand	frag_check.h	/^	int srand;$/;"	m	struct:__anon4
ssw_align	ssw.c	/^s_align* ssw_align (const s_profile* prof, $/;"	f
ssw_init	ssw.c	/^s_profile* ssw_init (const int8_t* read, const int32_t readLen, const int8_t* mat, const int32_t n, const int8_t score_size) {$/;"	f
ssw_write	extend_ssw.c	/^void ssw_write (s_align* a,	char* ref_seq, char* read_seq, int8_t* table) $/;"	f
sw_sse2_byte	ssw.c	/^alignment_end* sw_sse2_byte (const int8_t* ref,$/;"	f
sw_sse2_word	ssw.c	/^alignment_end* sw_sse2_word (const int8_t* ref, $/;"	f
tb	ksw.h	/^	int tb, qb; \/\/ target start and query start$/;"	m	struct:__anon7
te	ksw.h	/^	int te, qe; \/\/ target end and query end$/;"	m	struct:__anon7
te2	ksw.h	/^	int score2, te2; \/\/ second best score and ending position on the target$/;"	m	struct:__anon7
unsoap2dp_extend	frag_check.c	/^int unsoap2dp_extend(frag_msg *f_msg, int f_i, int FLAG, bntseq_t *bns, int8_t *pac, char *read_seq, int8_t *seq1, int8_t *seq2)$/;"	f
usage	main.c	/^static int usage(void)	\/\/main usage$/;"	f	file:
